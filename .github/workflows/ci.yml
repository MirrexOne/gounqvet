name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.24.6']
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Cache Go build cache
      uses: actions/cache@v4
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-go-build-${{ matrix.go-version }}-${{ hashFiles('**/*.go', '**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-build-${{ matrix.go-version }}-

    - name: Download dependencies
      run: |
        go clean -modcache -cache -testcache
        go mod download
        go mod verify

    - name: Run tests
      run: |
        # Сначала компилируем все пакеты для генерации кэша типов
        go build -v ./...
        # Затем запускаем тесты
        go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      if: matrix.go-version == '1.24.6'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.out

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.6'

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: latest
        args: --timeout=5m

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.6'

    - name: Build binary
      run: go build -v ./cmd/gounqvet

    - name: Test install
      run: go install ./cmd/gounqvet

  compatibility:
    name: Compatibility Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.6'

    - name: Test with analysis framework
      run: |
        # Очищаем кэш и обновляем зависимости
        go clean -modcache -cache -testcache
        go mod download
        go mod verify
        # Компилируем все пакеты для генерации кэша типов
        go build -v ./...
        # Запускаем тесты и анализ
        go test -v ./internal/analyzer/...
        go run ./cmd/gounqvet ./...
